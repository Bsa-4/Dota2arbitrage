// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package store

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Bot struct {
	ID                 int32              `json:"id"`
	Name               string             `json:"name"`
	VpsLabel           string             `json:"vps_label"`
	Status             string             `json:"status"`
	LastHeartbeatAt    pgtype.Timestamptz `json:"last_heartbeat_at"`
	MarketAccountsJson []byte             `json:"market_accounts_json"`
	CreatedAt          pgtype.Timestamptz `json:"created_at"`
}

type Fee struct {
	ID         int32              `json:"id"`
	MarketID   int32              `json:"market_id"`
	Kind       string             `json:"kind"`
	PercentBps int32              `json:"percent_bps"`
	FixedMinor int64              `json:"fixed_minor"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type FxRate struct {
	ID    int32              `json:"id"`
	Base  string             `json:"base"`
	Quote string             `json:"quote"`
	Rate  pgtype.Numeric     `json:"rate"`
	AsOf  pgtype.Timestamptz `json:"as_of"`
}

type Item struct {
	ID               int64              `json:"id"`
	BotID            pgtype.Int4        `json:"bot_id"`
	AppID            int32              `json:"app_id"`
	AssetID          string             `json:"asset_id"`
	MarketHashName   string             `json:"market_hash_name"`
	State            string             `json:"state"`
	LocationMarketID pgtype.Int4        `json:"location_market_id"`
	TradableAt       pgtype.Timestamptz `json:"tradable_at"`
	CreatedAt        pgtype.Timestamptz `json:"created_at"`
}

type Market struct {
	ID        int32              `json:"id"`
	Code      string             `json:"code"`
	Name      string             `json:"name"`
	Currency  string             `json:"currency"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type Opportunity struct {
	ID           int64              `json:"id"`
	ItemKey      string             `json:"item_key"`
	BuyMarketID  int32              `json:"buy_market_id"`
	SellMarketID int32              `json:"sell_market_id"`
	SpreadBps    int32              `json:"spread_bps"`
	CalcJson     []byte             `json:"calc_json"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
}

type Order struct {
	ID         int64              `json:"id"`
	MarketID   int32              `json:"market_id"`
	BotID      pgtype.Int4        `json:"bot_id"`
	Side       string             `json:"side"`
	PriceMinor int64              `json:"price_minor"`
	Currency   string             `json:"currency"`
	Qty        int32              `json:"qty"`
	State      string             `json:"state"`
	IdemKey    string             `json:"idem_key"`
	ExtID      pgtype.Text        `json:"ext_id"`
	ItemKey    pgtype.Text        `json:"item_key"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `json:"updated_at"`
}

type RiskLimit struct {
	ID         int32              `json:"id"`
	Name       string             `json:"name"`
	ConfigJson []byte             `json:"config_json"`
	Enabled    bool               `json:"enabled"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
}

type Trade struct {
	ID          int64              `json:"id"`
	BuyOrderID  pgtype.Int8        `json:"buy_order_id"`
	SellOrderID pgtype.Int8        `json:"sell_order_id"`
	State       string             `json:"state"`
	PnlNetMinor pgtype.Int8        `json:"pnl_net_minor"`
	HoldTimeSec pgtype.Int4        `json:"hold_time_sec"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type User struct {
	ID          int32              `json:"id"`
	Username    pgtype.Text        `json:"username"`
	TradeUrlEnc pgtype.Text        `json:"trade_url_enc"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}
